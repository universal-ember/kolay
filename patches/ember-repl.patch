diff --git a/dist/compile/formats/gjs/index.js b/dist/compile/formats/gjs/index.js
index c01c9ace959c3f13aabda370f419f362761e1e66..cd7ffcef37125cb7123e87179e11b1889f102046 100644
--- a/dist/compile/formats/gjs/index.js
+++ b/dist/compile/formats/gjs/index.js
@@ -1,8 +1,9 @@
+import { importSync } from '@embroider/macros';
 import babelPluginEmberTemplateCompilation from 'babel-plugin-ember-template-compilation';
-import * as compiler from 'ember-template-compiler';
 import { nameFor } from '../../utils.js';
 import { evalSnippet } from './eval.js';
 
+const compiler = importSync('ember-source/dist/ember-template-compiler.js');
 /**
  * @public
  * Transpiles GlimmerJS (*.gjs) formatted text into and evaluates as a JS Module.
@@ -27,7 +28,7 @@ async function compileJS(code, extraModules) {
   try {
     let compiled = await transpile({
       code: code,
-      name
+      name,
     });
     if (!compiled) {
       throw new Error(`Compiled output is missing`);
@@ -39,21 +40,16 @@ async function compileJS(code, extraModules) {
   return {
     name,
     component,
-    error
+    error,
   };
 }
-async function transpile({
-  code: input,
-  name
-}) {
+async function transpile({ code: input, name }) {
   let preprocessed = await preprocess(input, name);
   let result = await transform(preprocessed, name);
   if (!result) {
     return;
   }
-  let {
-    code
-  } = result;
+  let { code } = result;
   return code;
 }
 let processor;
@@ -63,14 +59,12 @@ async function preprocess(input, name) {
     fetchingPromise = import('content-tag');
   }
   if (!processor) {
-    let {
-      Preprocessor
-    } = await fetchingPromise;
+    let { Preprocessor } = await fetchingPromise;
     processor = new Preprocessor();
   }
   return processor.process(input, {
     filename: `${name}.js`,
-    inline_source_map: true
+    inline_source_map: true,
   });
 }
 async function transform(intermediate, name, options = {}) {
@@ -78,21 +72,35 @@ async function transform(intermediate, name, options = {}) {
   return babel.transform(intermediate, {
     filename: `${name}.js`,
     plugins: [
-    // [babelPluginIntermediateGJS],
-    [babelPluginEmberTemplateCompilation, {
-      compiler
-    }], [babel.availablePlugins['proposal-decorators'], {
-      legacy: true
-    }], [babel.availablePlugins['proposal-class-properties']]],
-    presets: [[babel.availablePresets['env'], {
-      // false -- keeps ES Modules
-      modules: 'cjs',
-      targets: {
-        esmodules: true
-      },
-      forceAllTransforms: false,
-      ...options
-    }]]
+      // [babelPluginIntermediateGJS],
+      [
+        babelPluginEmberTemplateCompilation,
+        {
+          compiler,
+        },
+      ],
+      [
+        babel.availablePlugins['proposal-decorators'],
+        {
+          legacy: true,
+        },
+      ],
+      [babel.availablePlugins['proposal-class-properties']],
+    ],
+    presets: [
+      [
+        babel.availablePresets['env'],
+        {
+          // false -- keeps ES Modules
+          modules: 'cjs',
+          targets: {
+            esmodules: true,
+          },
+          forceAllTransforms: false,
+          ...options,
+        },
+      ],
+    ],
   });
 }
 
